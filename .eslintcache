[{"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\index.js":"1","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reportWebVitals.js":"2","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\App.js":"3","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reducers\\index.js":"4","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reducers\\recipeCardsReducer.js":"5","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\actions\\recipeCardsAction.js":"6","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\api.js":"7","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeCard.js":"8","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\Home.js":"9","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\Nav.js":"10","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\GlobalStyles.js":"11","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\Recipes.js":"12","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reducers\\recipeDetailsReducer.js":"13","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\actions\\recipeDetailsAction.js":"14","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\CookBookCard.js":"15","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\RecipeDetail.js":"16","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\RecipeDetailIngredient.js":"17","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\RecipeDetailInstruction.js":"18","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\AllergyMarker.js":"19","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\NutritionalInfo.js":"20"},{"size":861,"mtime":1612225360826,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1198,"mtime":1613342838377,"results":"24","hashOfConfig":"22"},{"size":311,"mtime":1612938854635,"results":"25","hashOfConfig":"22"},{"size":388,"mtime":1612938769483,"results":"26","hashOfConfig":"22"},{"size":341,"mtime":1612937667690,"results":"27","hashOfConfig":"22"},{"size":249072,"mtime":1613200001404,"results":"28","hashOfConfig":"22"},{"size":5205,"mtime":1613198393873,"results":"29","hashOfConfig":"22"},{"size":1842,"mtime":1613197689473,"results":"30","hashOfConfig":"22"},{"size":1282,"mtime":1613196017324,"results":"31","hashOfConfig":"22"},{"size":1092,"mtime":1613264600856,"results":"32","hashOfConfig":"22"},{"size":5032,"mtime":1613198090124,"results":"33","hashOfConfig":"22"},{"size":447,"mtime":1612940505320,"results":"34","hashOfConfig":"22"},{"size":336,"mtime":1612939964171,"results":"35","hashOfConfig":"22"},{"size":2126,"mtime":1613197628062,"results":"36","hashOfConfig":"22"},{"size":10977,"mtime":1613249206540,"results":"37","hashOfConfig":"22"},{"size":1871,"mtime":1613200718166,"results":"38","hashOfConfig":"22"},{"size":762,"mtime":1613264436141,"results":"39","hashOfConfig":"22"},{"size":1051,"mtime":1613249161041,"results":"40","hashOfConfig":"22"},{"size":5345,"mtime":1613204251895,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"4jazi6",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\index.js",[],["88","89"],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reportWebVitals.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\App.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reducers\\index.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reducers\\recipeCardsReducer.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\actions\\recipeCardsAction.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\api.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeCard.js",["90","91","92","93"],"import { faStopwatch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { motion } from 'framer-motion';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport MissingImage from '../../images/card_image_missing.svg';\r\n\r\nimport { loadRecipeDetails } from '../../actions/recipeDetailsAction';\r\nimport { mockRecipeDetails } from '../../api';\r\nimport RecipeDetail from './RecipeDetail/RecipeDetail';\r\n\r\nconst RecipeCard = ({\r\n  recipe,\r\n  cookBookRef,\r\n  cookBookList,\r\n  setCookBookList,\r\n  isCookBookOpen,\r\n  setIsCookBookOpen,\r\n}) => {\r\n  const recipeDetails = mockRecipeDetails();\r\n  // const recipeDetails = useSelector((state) => state.recipeDetails);\r\n  const dispatch = useDispatch();\r\n  const cardRef = useRef();\r\n\r\n  const [recipeCardState, setRecipeCardState] = useState({\r\n    isDocked: false,\r\n    isDragging: false,\r\n    isDetailOpen: false,\r\n    recipeDetail: {},\r\n  });\r\n\r\n  const [recipeDetail, setRecipeDetail] = useState({});\r\n\r\n  // useEffect(() => {\r\n  //   setRecipeDetail(\r\n  //     recipeDetails.recipes.find((element) => element.id === recipe.id)\r\n  //   );\r\n  // }, [recipeDetails]);\r\n\r\n  const isWithinCookBook = (cardRect, cookBookRef, threshold) => {\r\n    if (\r\n      cardRect.top - threshold + cardRect.height > cookBookRef.top &&\r\n      cardRect.left - threshold + cardRect.width > cookBookRef.left &&\r\n      cardRect.bottom + threshold - cardRect.height < cookBookRef.bottom &&\r\n      cardRect.right + threshold - cardRect.width < cookBookRef.right\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const modifyDrag = (event, info) => {\r\n    const cardRect = cardRef.current.getBoundingClientRect();\r\n    const cookBookRect = cookBookRef.current.getBoundingClientRect();\r\n    const result = isWithinCookBook(cardRect, cookBookRect, 100);\r\n    if (recipeCardState.isDocked !== result) {\r\n      setRecipeCardState({ ...recipeCardState, isDocked: result });\r\n    }\r\n\r\n    if (!isCookBookOpen && result) {\r\n      setIsCookBookOpen(true);\r\n    }\r\n  };\r\n\r\n  const endDrag = (event, info) => {\r\n    const newArray = recipeCardState.isDocked\r\n      ? [...cookBookList, recipe.id]\r\n      : [...cookBookList].filter((e) => e !== recipe.id);\r\n    setCookBookList(newArray);\r\n    setRecipeCardState({ ...recipeCardState, isDragging: false });\r\n  };\r\n\r\n  const onTop = { zIndex: 1 };\r\n  const flat = {\r\n    zIndex: 0,\r\n    transition: { delay: 0.3 },\r\n  };\r\n\r\n  const onCardClick = () => {\r\n    if (!cardRef.current.style.transform) {\r\n      if (!recipeDetails.recipes.some((el) => el.id === recipe.id)) {\r\n        console.log('NOT FOUND');\r\n        dispatch(loadRecipeDetails(recipe.id));\r\n        //useEffect updates recipeDetail when recipeDetails is updated\r\n      } else {\r\n        setRecipeDetail(\r\n          recipeDetails.recipes.find((element) => element.id === recipe.id)\r\n        );\r\n      }\r\n\r\n      setRecipeCardState({ ...recipeCardState, isDetailOpen: true });\r\n      document.body.style.overflow = 'hidden';\r\n    }\r\n  };\r\n\r\n  return (\r\n    !cookBookList.includes(recipe.id) && (\r\n      <>\r\n        {recipeCardState.isDetailOpen && (\r\n          <RecipeDetail\r\n            recipeCardState={recipeCardState.isDetailOpen}\r\n            setRecipeCardState={setRecipeCardState}\r\n            recipe={recipeDetail}\r\n            recipeId={recipe.id}\r\n          />\r\n        )}\r\n        <Card\r\n          ref={cardRef}\r\n          drag\r\n          dragConstraints={cardRef}\r\n          dragElastic={1}\r\n          onDragStart={() =>\r\n            setRecipeCardState({ ...recipeCardState, isDragging: true })\r\n          }\r\n          onDrag={modifyDrag}\r\n          onDragEnd={endDrag}\r\n          layout\r\n          layoutId={`recipeCard-${recipe.id}`}\r\n          data-testid=\"recipeCard\"\r\n          data-recipe-id={recipe.id}\r\n          animate={recipeCardState.isDragging ? onTop : flat}\r\n          onClick={onCardClick}\r\n        >\r\n          <FoodImage\r\n            draggable={false}\r\n            data-testid=\"recipeCardImage\"\r\n            src={recipe.image ? recipe.image : MissingImage}\r\n            alt={`${recipe.title}`}\r\n          />\r\n          <FoodInfo>\r\n            <Title>{recipe.title}</Title>\r\n          </FoodInfo>\r\n        </Card>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst Card = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 8px;\r\n  border: 1px solid lightgray;\r\n  overflow: hidden;\r\n  background: #f4f7fc;\r\n  width: 26.8rem;\r\n  height: 30rem;\r\n  justify-content: left;\r\n  filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.25));\r\n  z-index: 3;\r\n  cursor: pointer;\r\n  will-change: transform;\r\n`;\r\n\r\nconst FoodImage = styled.img`\r\n  height: 23.6rem;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst FoodInfo = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled(motion.div)`\r\n  font-family: var(--header-font);\r\n  font-size: 1.6rem;\r\n\r\n  text-align: center;\r\n  color: var(--text-color);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default RecipeCard;\r\n","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\Home.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\Nav.js",["94"],"import { motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport YumLogo from '../images/Yum_Logo.svg';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <Navigation>\r\n      <Logo>\r\n        <img src={YumLogo} alt=\"Yum Logo\" />\r\n      </Logo>\r\n      <NavLinks>\r\n        <NavItem href=\"#\">Home</NavItem>\r\n        <NavItem href=\"#\">Menu</NavItem>\r\n        <NavItem href=\"#\">Event</NavItem>\r\n        <NavItem href=\"#\">Team</NavItem>\r\n        <NavItem href=\"#\">Shop</NavItem>\r\n        <NavItem href=\"#\">Contact</NavItem>\r\n      </NavLinks>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nconst Navigation = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 2rem 0;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width: 8rem;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst NavLinks = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavItem = styled.a`\r\n  margin: 0px 3rem;\r\n\r\n  text-decoration: none;\r\n  color: var(--text-color);\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst ContactButton = styled(motion.div)`\r\n  padding: 1rem 3rem;\r\n  background: var(--highlight-color);\r\n  border-radius: 4px;\r\n  color: var(--bg-color);\r\n  position: relative;\r\n`;\r\n\r\nexport default Nav;\r\n","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\GlobalStyles.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\Recipes.js",["95","96","97","98"],"import { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadRecipes } from '../actions/recipeCardsAction';\r\nimport RecipeCard from './RecipeCard/RecipeCard';\r\nimport { mockRecipeCards } from '../api';\r\n\r\nimport CookBookCard from './CookBookCard';\r\nconst Recipes = ({ isCookBookOpen, setIsCookBookOpen }) => {\r\n  const recipeCards = mockRecipeCards();\r\n  // const recipeCards = useSelector((state) => state.recipeCards);\r\n  // console.log(recipeCards);\r\n  const dispatch = useDispatch();\r\n  const cookBookRef = useRef();\r\n  const [cookBookList, setCookBookList] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(loadRecipes(10));\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('HI');\r\n  //   console.log(recipeCards);\r\n  // }, [recipeCards]);\r\n\r\n  const cookBookButtonVariant = {\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    },\r\n    hide: {\r\n      opacity: 0,\r\n      transition: {\r\n        duration: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <RecipeContainer>\r\n      <AnimateSharedLayout type=\"switch\">\r\n        <AnimatePresence>\r\n          <CardContainer>\r\n            {recipeCards.recipes.results &&\r\n              recipeCards.recipes.results.map((recipe) => {\r\n                return (\r\n                  <RecipeCard\r\n                    cookBookRef={cookBookRef}\r\n                    setCookBookList={setCookBookList}\r\n                    cookBookList={cookBookList}\r\n                    isCookBookOpen={isCookBookOpen}\r\n                    setIsCookBookOpen={setIsCookBookOpen}\r\n                    key={`recipe-${recipe.id}`}\r\n                    recipe={recipe}\r\n                  />\r\n                );\r\n              })}\r\n          </CardContainer>\r\n\r\n          <CookBook\r\n            initial={{ right: -320 }}\r\n            animate={\r\n              isCookBookOpen\r\n                ? { right: -10, transition: { type: 'spring', damping: 15 } }\r\n                : { right: -320, transition: { type: 'spring', damping: 13 } }\r\n            }\r\n            key=\"cookbook\"\r\n            ref={cookBookRef}\r\n          >\r\n            <ButtonContainer\r\n              variants={cookBookButtonVariant}\r\n              animate={!isCookBookOpen ? 'show' : 'hide'}\r\n              whileHover={'show'}\r\n            >\r\n              <ToggleButton\r\n                onClick={() => setIsCookBookOpen(!isCookBookOpen)}\r\n              ></ToggleButton>\r\n            </ButtonContainer>\r\n\r\n            <CookBookCards>\r\n              {isCookBookOpen && <CookBookTitle>Cookbook</CookBookTitle>}\r\n              {isCookBookOpen &&\r\n                cookBookList &&\r\n                cookBookList.map((entryId) => {\r\n                  const recipe = recipeCards.recipes.results.find(\r\n                    (element) => element.id === entryId\r\n                  );\r\n                  return (\r\n                    <CookBookCard\r\n                      key={`cookBookList-${recipe.id}`}\r\n                      recipe={recipe}\r\n                      setCookBookList={setCookBookList}\r\n                      cookBookList={cookBookList}\r\n                    />\r\n                  );\r\n                })}\r\n            </CookBookCards>\r\n          </CookBook>\r\n        </AnimatePresence>\r\n      </AnimateSharedLayout>\r\n    </RecipeContainer>\r\n  );\r\n};\r\n\r\nconst CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 30rem);\r\n  grid-column-gap: 3.2rem;\r\n  grid-row-gap: 3.2rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst RecipeContainer = styled.div`\r\n  padding: 10rem 0;\r\n  height: 100vh; //Keeps div from disappearing without cards\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CookBook = styled(motion.div)`\r\n  background: var(--highlight-color);\r\n  font-family: var(--header-font);\r\n  padding: 3rem;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 400px;\r\n  height: 100%;\r\n  border-radius: 50px 0px 0px 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst CookBookCards = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst ToggleButton = styled(motion.button)`\r\n  width: 12px;\r\n  height: 500px;\r\n  border-radius: 99999px;\r\n  border: 0;\r\n  padding: 0;\r\n  font-size: 100%;\r\n  background: #e89209;\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  margin-right: 20px;\r\n  width: 30px;\r\n`;\r\n\r\nconst CookBookTitle = styled(motion.span)`\r\n  color: var(--bg-color);\r\n  font-size: 2rem;\r\n  margin-bottom: 1rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default Recipes;\r\n","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\reducers\\recipeDetailsReducer.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\actions\\recipeDetailsAction.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\CookBookCard.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\RecipeDetail.js",["99","100","101"],"import { motion } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  faBreadSlice,\r\n  faLeaf,\r\n  faSeedling,\r\n  faSync,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DairyIcon from '../../../images/Dairy.svg';\r\nimport AllergyMarker from './AllergyMarker';\r\nimport RecipeDetailIngredient from './RecipeDetailIngredient';\r\nimport RecipeDetailInstruction from './RecipeDetailInstruction';\r\n\r\nimport NutritionalInfo from './NutritionalInfo';\r\n\r\nconst RecipeDetail = ({\r\n  recipeCardState,\r\n  setRecipeCardState,\r\n  recipe,\r\n  recipeId,\r\n}) => {\r\n  const [servingSize, setServingSize] = useState(recipe.servings);\r\n\r\n  return recipe ? (\r\n    <CardShadow\r\n      className=\"shadow\"\r\n      onClick={(e) => {\r\n        if (e.target.classList.contains('shadow')) {\r\n          setRecipeCardState({ ...recipeCardState, isDetailOpen: false });\r\n          document.body.style.overflow = 'auto';\r\n        }\r\n      }}\r\n    >\r\n      <Card layoutId={`recipeCard-${recipe.id}`}>\r\n        <CardContent>\r\n          <Header>\r\n            <ImageContainer>\r\n              <RecipeImage src={recipe.image} alt={`${recipe.title}`} />\r\n            </ImageContainer>\r\n            <InfoContainer>\r\n              <RecipeName>{recipe.title}</RecipeName>\r\n              <DividerLine\r\n                width=\"198\"\r\n                height=\"10\"\r\n                viewBox=\"0 0 198 10\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M0 5H198\"\r\n                  stroke=\"var(--highlight-color)\"\r\n                  strokeWidth=\"9\"\r\n                />\r\n              </DividerLine>\r\n              <AllergyInfo>\r\n                {recipe.glutenFree && (\r\n                  <AllergyMarker\r\n                    iconName={faBreadSlice}\r\n                    labelName={'Gluten Free'}\r\n                    external={false}\r\n                  />\r\n                )}\r\n                {recipe.dairyFree && (\r\n                  <AllergyMarker\r\n                    iconName={\r\n                      <svg\r\n                        viewBox=\"0 0 10 19\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M2.2 1H7.8C8.39998 1 8.39998 2.14607 7.8 2.14607H2.2C1.6 2.14607 1.6 1 2.2 1Z\"\r\n                          fill=\"var(--text-color)\"\r\n                        />\r\n                        <path\r\n                          d=\"M2.6 3.10112H7.4C7.4 4.82022 9 7.68539 9 8.25843V16.8539C9 17.427 8.4 18 7.8 18H2.2C1.6 18 1 17.236 1 16.6629V8.25843C1 7.68539 2.6 4.82022 2.6 3.10112Z\"\r\n                          fill=\"var(--text-color)\"\r\n                        />\r\n                        <path\r\n                          d=\"M7.8 2.14607C8.39998 2.14607 8.39998 1 7.8 1H2.2C1.6 1 1.6 2.14607 2.2 2.14607M7.8 2.14607C6.69546 2.14607 1.60001 2.14607 2.2 2.14607M7.8 2.14607H2.2M2.6 3.10112H7.4C7.4 4.82022 9 7.68539 9 8.25843V16.8539C9 17.427 8.4 18 7.8 18H2.2C1.6 18 1 17.236 1 16.6629V8.25843C1 7.68539 2.6 4.82022 2.6 3.10112Z\"\r\n                          stroke=\"var(--text-color)\"\r\n                        />\r\n                      </svg>\r\n                    }\r\n                    labelName={'Dairy Free'}\r\n                    external={true}\r\n                  />\r\n                )}\r\n                {recipe.vegetarian && (\r\n                  <AllergyMarker\r\n                    iconName={faLeaf}\r\n                    labelName={'Vegetarian'}\r\n                    external={false}\r\n                  />\r\n                )}\r\n                {recipe.vegan && (\r\n                  <AllergyMarker\r\n                    iconName={faSeedling}\r\n                    labelName={'Vegan'}\r\n                    external={false}\r\n                  />\r\n                )}\r\n              </AllergyInfo>\r\n              <RecipeStats>\r\n                <StatBox>\r\n                  <StatLabel>Recipe By</StatLabel>\r\n                  <StatData>{recipe.sourceName}</StatData>\r\n                </StatBox>\r\n                <StatBox>\r\n                  <StatLabel>Cook Time</StatLabel>\r\n                  <StatData>{recipe.readyInMinutes}m</StatData>\r\n                </StatBox>\r\n                <StatBox>\r\n                  <StatLabel>Servings</StatLabel>\r\n                  <StatData>\r\n                    <ServingContainer>\r\n                      <button\r\n                        onClick={() =>\r\n                          servingSize > 1 ? setServingSize(servingSize - 1) : ''\r\n                        }\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <input\r\n                        readOnly={true}\r\n                        type=\"number\"\r\n                        value={servingSize}\r\n                      />\r\n                      <button onClick={() => setServingSize(servingSize + 1)}>\r\n                        +\r\n                      </button>\r\n                    </ServingContainer>\r\n                  </StatData>\r\n                </StatBox>\r\n              </RecipeStats>\r\n            </InfoContainer>\r\n          </Header>\r\n          <RecipeBody>\r\n            <div>\r\n              <SubtitleHeader>Ingredients</SubtitleHeader>\r\n              <IngredientCards>\r\n                {recipe.extendedIngredients &&\r\n                  recipe.extendedIngredients.map((item) => (\r\n                    <RecipeDetailIngredient\r\n                      key={`RecipeDetailIngredient-${recipe.id}-${item.id}`}\r\n                      item={item}\r\n                      defaultServing={recipe.servings}\r\n                      serving={servingSize}\r\n                    />\r\n                  ))}\r\n              </IngredientCards>\r\n            </div>\r\n            <div>\r\n              <SubtitleHeader>Instructions</SubtitleHeader>\r\n              <>\r\n                <RecipeInstructions>\r\n                  {recipe.analyzedInstructions[0] &&\r\n                    recipe.analyzedInstructions[0].steps.map((instruction) => (\r\n                      <RecipeDetailInstruction\r\n                        key={`RecipeInstruction-${recipe.key}-${instruction.number}`}\r\n                        instruction={instruction}\r\n                        recipe={recipe}\r\n                      />\r\n                    ))}\r\n                </RecipeInstructions>\r\n              </>\r\n            </div>\r\n            <div>\r\n              <SubtitleHeader>Nutritional Information</SubtitleHeader>\r\n              <NutritionContainer>\r\n                <NutritionalInfo recipe={recipe} />\r\n              </NutritionContainer>\r\n            </div>\r\n          </RecipeBody>\r\n        </CardContent>\r\n      </Card>\r\n    </CardShadow>\r\n  ) : (\r\n    <CardShadow>\r\n      <Card\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n        layoutId={`recipeCard-${recipeId}`}\r\n      >\r\n        <SpinnerIcon size=\"lg\" icon={faSync} spin />\r\n      </Card>\r\n    </CardShadow>\r\n  );\r\n};\r\n\r\nconst SpinnerIcon = styled(FontAwesomeIcon)`\r\n  font-size: 10rem;\r\n  color: #ccc;\r\n  will-change: transform;\r\n  display: inline-block;\r\n`;\r\n\r\nconst CardShadow = styled(motion.div)`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  position: fixed;\r\n  z-index: 5;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &::-webkit-scrollbar {\r\n    width: 1rem;\r\n    height: 0.5rem;\r\n    border-radius: 8px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: var(--highlight-color);\r\n    border-radius: 8px;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background: #e2e2e2;\r\n  }\r\n  &::-webkit-resizer {\r\n    display: none;\r\n  }\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Card = styled(motion.div)`\r\n  width: 70%;\r\n  border-radius: 1rem;\r\n  padding: 2rem 2rem;\r\n  background: white;\r\n  position: absolute;\r\n  will-change: transform;\r\n  z-index: 10;\r\n  color: black;\r\n  top: 0;\r\n  background: var(--card-color);\r\n`;\r\n\r\nconst CardContent = styled(motion.div)`\r\n  padding: 2rem;\r\n`;\r\n\r\nconst RecipeImage = styled(motion.img)`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n`;\r\nconst Header = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\nconst ImageContainer = styled(motion.div)``;\r\n\r\nconst InfoContainer = styled(motion.div)`\r\n  width: 50%;\r\n  padding-left: 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AllergyInfo = styled(motion.div)`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst RecipeName = styled(motion.div)`\r\n  font-size: 3.6rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst DividerLine = styled(motion.svg)`\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst RecipeStats = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ServingContainer = styled(motion.div)`\r\n  display: flex;\r\n  height: 2.5rem;\r\n  border-radius: 0.5rem;\r\n\r\n  button {\r\n    width: 2rem;\r\n    color: #718096;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    background: #e2e8f0;\r\n    border: 0;\r\n    font-size: 1.8rem;\r\n    &:focus {\r\n      outline: 0;\r\n      border: 0;\r\n    }\r\n    &:hover {\r\n      background: #cbd5e0;\r\n    }\r\n  }\r\n\r\n  input {\r\n    width: 3rem;\r\n    outline: 0;\r\n    border: 0;\r\n    text-align: center;\r\n    display: flex;\r\n    align-items: center;\r\n    background: #e2e8f0;\r\n    font-family: Roboto, sans-serif;\r\n    font-size: 1.8rem;\r\n  }\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  input[type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nconst StatBox = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StatLabel = styled(motion.span)`\r\n  color: var(--secondary-color);\r\n  font-size: 1.8rem;\r\n`;\r\nconst StatData = styled(motion.span)`\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst RecipeBody = styled(motion.div)``;\r\n\r\nconst SubtitleHeader = styled(motion.div)`\r\n  margin-top: 3rem;\r\n  font-size: 3.2rem;\r\n  margin-bottom: 3.2rem;\r\n`;\r\n\r\nconst InstructionContainer = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IngredientCards = styled(motion.div)`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 18rem);\r\n  grid-column-gap: 3rem;\r\n  grid-row-gap: 2rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst RecipeInstructions = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-self: center;\r\n`;\r\n\r\nconst NutritionContainer = styled(motion.div)`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 40rem);\r\n  justify-items: center;\r\n  padding-bottom: 3rem;\r\n  justify-content: center;\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nexport default RecipeDetail;\r\n","D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\RecipeDetailIngredient.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\RecipeDetailInstruction.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\AllergyMarker.js",[],"D:\\Suhas\\Documents\\Suhas\\Projects\\food_website\\src\\components\\RecipeCard\\RecipeDetail\\NutritionalInfo.js",["102","103","104","105"],"import { motion } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {} from 'module';\r\nimport {\r\n  Cell,\r\n  Legend,\r\n  Pie,\r\n  PieChart,\r\n  PolarAngleAxis,\r\n  PolarGrid,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  RadarChart,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n} from 'recharts';\r\n\r\nconst NutritionalInfo = ({ recipe }) => {\r\n  const [nutrientData, setNutrientData] = useState({});\r\n\r\n  const getNutrientData = () => {\r\n    const totalMacro = recipe.nutrition.nutrients.reduce(\r\n      (accumulator, current) => {\r\n        if (\r\n          current.name === 'Carbohydrates' ||\r\n          current.name === 'Fat' ||\r\n          current.name === 'Protein'\r\n        ) {\r\n          accumulator += current.amount;\r\n        }\r\n        return accumulator;\r\n      },\r\n      0\r\n    );\r\n    const macros = recipe.nutrition.nutrients.reduce((accumulator, current) => {\r\n      if (\r\n        current.name === 'Carbohydrates' ||\r\n        current.name === 'Fat' ||\r\n        current.name === 'Protein'\r\n      )\r\n        accumulator.push({\r\n          name: current.name,\r\n          value: Math.floor((current.amount / totalMacro) * 100),\r\n        });\r\n      return accumulator;\r\n    }, []);\r\n\r\n    const vitamins = recipe.nutrition.nutrients\r\n      .reduce((accumulator, current) => {\r\n        if (current.name.includes('Vitamin')) {\r\n          accumulator.push({\r\n            name: current.title,\r\n            value: current.percentOfDailyNeeds,\r\n          });\r\n        }\r\n        return accumulator;\r\n      }, [])\r\n      .filter(\r\n        (el) =>\r\n          !(\r\n            el.name === 'Vitamin B3' ||\r\n            el.name === 'Vitamin B2' ||\r\n            el.name === 'Vitamin B1' ||\r\n            el.name === 'Vitamin B5'\r\n          )\r\n      );\r\n\r\n    const minerals = recipe.nutrition.nutrients.reduce(\r\n      (accumulator, current) => {\r\n        if (\r\n          current.name === 'Phosphorus' ||\r\n          current.name === 'Calcium' ||\r\n          current.name === 'Iron' ||\r\n          current.name === 'Selenium' ||\r\n          current.name === 'Manganese' ||\r\n          current.name === 'Copper' ||\r\n          current.name === 'Zinc' ||\r\n          current.name === 'Magnesium' ||\r\n          current.name === 'Potassium'\r\n        ) {\r\n          accumulator.push({\r\n            name: current.title,\r\n            value: current.percentOfDailyNeeds,\r\n          });\r\n        }\r\n        return accumulator;\r\n      },\r\n      []\r\n    );\r\n\r\n    return { macros, vitamins, minerals };\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNutrientData(getNutrientData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(nutrientData);\r\n  }, [nutrientData]);\r\n\r\n  const COLORS = ['#5ad', '#e55', '#8a0'];\r\n  const RADIAN = Math.PI / 180;\r\n\r\n  const renderCustomizedLabel = ({\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    percent,\r\n    index,\r\n  }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fill=\"white\"\r\n        textAnchor={x > cx ? 'start' : 'end'}\r\n        dominantBaseline=\"central\"\r\n      >\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RadarChart\r\n        outerRadius={90}\r\n        width={450}\r\n        height={400}\r\n        data={nutrientData.vitamins}\r\n        innerRadius={'10%'}\r\n      >\r\n        <PolarGrid />\r\n        <PolarAngleAxis dataKey=\"name\" />\r\n        <PolarRadiusAxis\r\n          tick={false}\r\n          axisLine={false}\r\n          angle={30}\r\n          domain={[0, 100]}\r\n        />\r\n        <Radar\r\n          name=\"Percent of Daily Needs\"\r\n          dataKey=\"value\"\r\n          unit=\"%\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#8884d8\"\r\n          fillOpacity={0.6}\r\n        />\r\n        <Tooltip />\r\n      </RadarChart>\r\n      <PieChart width={450} height={400}>\r\n        <Pie\r\n          data={nutrientData.macros}\r\n          outerRadius={80}\r\n          label={renderCustomizedLabel}\r\n          labelLine={false}\r\n          unit=\"%\"\r\n        >\r\n          {nutrientData.macros &&\r\n            nutrientData.macros.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={COLORS[index % COLORS.length]}\r\n                stroke={COLORS[index % COLORS.length]}\r\n                fillOpacity={0.6}\r\n              />\r\n            ))}\r\n        </Pie>\r\n        <Tooltip formatter={(value, name) => [`${name}: ${value}%`]} />\r\n        <Legend verticalAlign=\"bottom\" />\r\n      </PieChart>\r\n      <RadarChart\r\n        outerRadius={90}\r\n        width={450}\r\n        height={400}\r\n        data={nutrientData.minerals}\r\n        innerRadius={'10%'}\r\n      >\r\n        <PolarGrid />\r\n        <PolarAngleAxis dataKey=\"name\" />\r\n        <PolarRadiusAxis\r\n          tick={false}\r\n          axisLine={false}\r\n          angle={30}\r\n          domain={[0, 100]}\r\n        />\r\n        <Radar\r\n          name=\"Percent of Daily Needs\"\r\n          dataKey=\"value\"\r\n          unit=\"%\"\r\n          stroke=\"#e98a4b\"\r\n          fill=\"#e98a4b\"\r\n          fillOpacity={0.6}\r\n        />\r\n        <Tooltip />\r\n      </RadarChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NutritionalInfo;\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"110","severity":1,"message":"114","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":25},{"ruleId":"110","severity":1,"message":"115","line":4,"column":17,"nodeType":"112","messageId":"113","endLine":4,"endColumn":26},{"ruleId":"110","severity":1,"message":"116","line":5,"column":23,"nodeType":"112","messageId":"113","endLine":5,"endColumn":34},{"ruleId":"110","severity":1,"message":"117","line":54,"column":7,"nodeType":"112","messageId":"113","endLine":54,"endColumn":20},{"ruleId":"110","severity":1,"message":"115","line":2,"column":17,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"116","line":4,"column":23,"nodeType":"112","messageId":"113","endLine":4,"endColumn":34},{"ruleId":"110","severity":1,"message":"118","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":21},{"ruleId":"110","severity":1,"message":"119","line":14,"column":9,"nodeType":"112","messageId":"113","endLine":14,"endColumn":17},{"ruleId":"110","severity":1,"message":"115","line":2,"column":17,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"120","line":11,"column":8,"nodeType":"112","messageId":"113","endLine":11,"endColumn":17},{"ruleId":"110","severity":1,"message":"121","line":353,"column":7,"nodeType":"112","messageId":"113","endLine":353,"endColumn":27},{"ruleId":"110","severity":1,"message":"122","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":16},{"ruleId":"110","severity":1,"message":"123","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"124","line":15,"column":3,"nodeType":"112","messageId":"113","endLine":15,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":97,"column":6,"nodeType":"127","endLine":97,"endColumn":8,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'faStopwatch' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'ContactButton' is assigned a value but never used.","'loadRecipes' is defined but never used.","'dispatch' is assigned a value but never used.","'DairyIcon' is defined but never used.","'InstructionContainer' is assigned a value but never used.","'motion' is defined but never used.","'styled' is defined but never used.","'ResponsiveContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNutrientData'. Either include it or remove the dependency array.","ArrayExpression",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [getNutrientData]",{"range":"134","text":"135"},[2598,2600],"[getNutrientData]"]